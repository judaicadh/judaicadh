#!/usr/bin/env node

var lunr = require('lunr'),
    stdin = process.stdin,
    stdout = process.stdout,
    buffer = []

stdin.resume()
stdin.setEncoding('utf8')

stdin.on('data', function (data) {
  buffer.push(data)
})

stdin.on('end', function () {
  var corpus = JSON.parse(buffer.join(''))
  var idx = lunr( (builder) => {
    builder.ref('id')
    builder.field('title')
    builder.field('content')
    builder.field('author')
    builder.field('layout')
    builder.field('categories')
    builder.field('url')
    builder.field('date')
    // This is required to provide the position of terms in
    // in the index. Currently position data is opt-in due
    // to the increase in index size required to store all
    // the positions. This is currently not well documented
    // and a better interface may be required to expose builder
    // to consumers.
    builder.metadataWhitelist = ['position']

    // This is the biggest change to the interface over the
    // 0.x and 1.x branches. Documents must be added to the
    // index within builder closure. When builder function completes
    // the index is immutable, no more documents can be added.
    corpus.forEach(function (doc) {
      builder.add(doc)
    }, builder)
  })

  stdout.write(JSON.stringify(idx))
})
